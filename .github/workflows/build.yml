name: Build
on:
  push:
  pull_request:
    types: [opened, sychronize, reopened]
  release:
    types: [published, prereleased]
  workflow_dispatch:

jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 🏗 Set up Python 2.7 # 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 2.7 #3.7
      - name: 🏗 Install build dependencies
        run: |
          python -m pip install wheel --user
      - name: 🔨 Build a binary wheel and a source tarball
        run: |
          python setup.py sdist bdist_wheel
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  # lint-black:
  #   name: 🧹 black
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: 🏗 Set up Python 3.7
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.7
  #     - name: 🏗 Set up dev dependencies
  #       run: |
  #         pip install -e .[develop]
  #     - name: 🚀 Run black
  #       run: |
  #         pre-commit run --hook-stage manual black --all-files --show-diff-on-failure

  # lint-prettier:
  #   name: 🧹 prettier
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: 🏗 Set up Python 3.7
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.7
  #     - name: 🏗 Set up dev dependencies
  #       run: |
  #         pip install -e .[develop]
  #     - name: 🚀 Run prettier
  #       run: |
  #         pre-commit run --hook-stage manual prettier --all-files --show-diff-on-failure

  # lint-isort:
  #   name: 🧹 isort
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: 🏗 Set up Python 3.7
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.7
  #     - name: 🏗 Set up dev dependencies
  #       run: |
  #         pip install -e .[develop]
  #     - name: 🚀 Run isort
  #       run: |
  #         pre-commit run --hook-stage manual isort --all-files --show-diff-on-failure

  # lint-flake8:
  #   name: 🧹 Flake8
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: 🏗 Set up Python 3.7
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.7
  #     - name: 🏗 Set up dev dependencies
  #       run: |
  #         pip install -e .[develop]
  #     - name: 🚀 Run flake8
  #       run: |
  #         pre-commit run --hook-stage manual flake8 --all-files

  # test-unit:
  #   name: 🧪 Unit tests
  #   strategy:
  #     matrix:
  #       python: ["2.7"] #, "3.8"]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: 🏗 Set up Python ${{ matrix.python }}
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python }}
  #     - name: 🏗 Set up test dependencies
  #       run: |
  #         pip install -e .
  #     - name: 🚀 Run test suite
  #       run: |
  #         pytest

  test-install:
    name: 🧪 Installation tests
    needs: build
    strategy:
      matrix:
        python: ["2.7"] # ["3.7", "3.8"]
        installable: ["wheel", "sdist"]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v1
        with:
          name: dist
          path: dist
      - name: 🏗 Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: 🚀 Install OctoPrint
        run: |
          pip install https://github.com/mrbeam/OctoPrint/archive/f_octoprint_1.4.zip
      - name: 🚀 Install wheel
        if: matrix.installable == 'wheel'
        run: |
          pip install dist/MrBeamPlugin-*-py2.py3-none-any.whl
      - name: 🚀 Install source tarball
        if: matrix.installable == 'sdist'
        run: |
          pip install dist/MrBeamPlugin-*.tar.gz
